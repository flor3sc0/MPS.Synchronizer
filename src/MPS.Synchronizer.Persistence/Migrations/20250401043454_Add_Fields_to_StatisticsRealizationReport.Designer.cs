// <auto-generated />
using System;
using MPS.Synchronizer.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MPS.Synchronizer.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250401043454_Add_Fields_to_StatisticsRealizationReport")]
    partial class Add_Fields_to_StatisticsRealizationReport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MPS.Synchronizer.Domain.Entities.Statistics.StatisticsIncome", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("Уникальный идентификатор записи");

                    b.Property<string>("Barcode")
                        .HasColumnType("text")
                        .HasColumnName("barcode")
                        .HasComment("Бар-код")
                        .HasAnnotation("Relational:JsonPropertyName", "barcode");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasComment("Дата поступления")
                        .HasAnnotation("Relational:JsonPropertyName", "date");

                    b.Property<DateOnly>("DateClose")
                        .HasColumnType("date")
                        .HasColumnName("dateClose")
                        .HasComment("Дата принятия (закрытия) в WB")
                        .HasAnnotation("Relational:JsonPropertyName", "dateClose");

                    b.Property<int>("IncomeId")
                        .HasColumnType("integer")
                        .HasColumnName("incomeId")
                        .HasComment("Номер поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "incomeId");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastChangeDate")
                        .HasComment("Дата и время обновления информации в сервисе. Это поле соответствует параметру dateFrom в запросе")
                        .HasAnnotation("Relational:JsonPropertyName", "lastChangeDate");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Юр. лицо которому принадлежит текущая запись, полученная через WB-Api");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint")
                        .HasColumnName("nmId")
                        .HasComment("Артикул WB")
                        .HasAnnotation("Relational:JsonPropertyName", "nmId");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number")
                        .HasComment("Номер УПД")
                        .HasAnnotation("Relational:JsonPropertyName", "number");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity")
                        .HasComment("Количество")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status")
                        .HasComment("Текущий статус поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text")
                        .HasColumnName("supplierArticle")
                        .HasComment("Артикул продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "supplierArticle");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Дата и время синхронизации записи через WB-Api");

                    b.Property<string>("TechSize")
                        .HasColumnType("text")
                        .HasColumnName("techSize")
                        .HasComment("Размер товара (пример S, M, L, XL, 42, 42-43)")
                        .HasAnnotation("Relational:JsonPropertyName", "techSize");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("totalPrice")
                        .HasComment("Цена из УПД")
                        .HasAnnotation("Relational:JsonPropertyName", "totalPrice");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text")
                        .HasColumnName("warehouseName")
                        .HasComment("Название склада")
                        .HasAnnotation("Relational:JsonPropertyName", "warehouseName");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LegalEntity" }, "IX_StatisticsIncomes_LegalEntity");

                    b.HasIndex(new[] { "Date" }, "IX_StatisticsIncomes_date");

                    b.HasIndex(new[] { "DateClose" }, "IX_StatisticsIncomes_dateClose");

                    b.HasIndex(new[] { "IncomeId" }, "IX_StatisticsIncomes_incomeId");

                    b.HasIndex(new[] { "LastChangeDate" }, "IX_StatisticsIncomes_lastChangeDate");

                    b.HasIndex(new[] { "NmId" }, "IX_StatisticsIncomes_nmId");

                    b.HasIndex(new[] { "Quantity" }, "IX_StatisticsIncomes_quantity");

                    b.HasIndex(new[] { "TotalPrice" }, "IX_StatisticsIncomes_totalPrice");

                    b.ToTable("StatisticsIncomes", null, t =>
                        {
                            t.HasComment("Информация о поставке");
                        });
                });

            modelBuilder.Entity("MPS.Synchronizer.Domain.Entities.Statistics.StatisticsOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("Уникальный идентификатор записи");

                    b.Property<string>("Barcode")
                        .HasColumnType("text")
                        .HasColumnName("barcode")
                        .HasComment("Баркод")
                        .HasAnnotation("Relational:JsonPropertyName", "barcode");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand")
                        .HasComment("Бренд")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("cancelDate")
                        .HasComment("Дата и время отмены заказа. Если заказ не был отменен, то '0001-01-01T00:00:00'")
                        .HasAnnotation("Relational:JsonPropertyName", "cancelDate");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category")
                        .HasComment("Категория")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<string>("CountryName")
                        .HasColumnType("text")
                        .HasColumnName("countryName")
                        .HasComment("Страна")
                        .HasAnnotation("Relational:JsonPropertyName", "countryName");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date")
                        .HasComment("Дата и время заказа. Это поле соответствует параметру dateFrom в запросе, если параметр flag=1")
                        .HasAnnotation("Relational:JsonPropertyName", "date");

                    b.Property<long>("DiscountPercent")
                        .HasColumnType("bigint")
                        .HasColumnName("discountPercent")
                        .HasComment("Скидка продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "discountPercent");

                    b.Property<decimal>("FinishedPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("finishedPrice")
                        .HasComment("Цена с учетом всех скидок, кроме суммы по WB Кошельку")
                        .HasAnnotation("Relational:JsonPropertyName", "finishedPrice");

                    b.Property<string>("GNumber")
                        .HasColumnType("text")
                        .HasColumnName("gNumber")
                        .HasComment("Номер заказа")
                        .HasAnnotation("Relational:JsonPropertyName", "gNumber");

                    b.Property<long>("IncomeId")
                        .HasColumnType("bigint")
                        .HasColumnName("incomeID")
                        .HasComment("Номер поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "incomeID");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean")
                        .HasColumnName("isCancel")
                        .HasComment("Отмена заказа. true - заказ отменен")
                        .HasAnnotation("Relational:JsonPropertyName", "isCancel");

                    b.Property<bool>("IsRealization")
                        .HasColumnType("boolean")
                        .HasColumnName("isRealization")
                        .HasComment("Договор реализации")
                        .HasAnnotation("Relational:JsonPropertyName", "isRealization");

                    b.Property<bool>("IsSupply")
                        .HasColumnType("boolean")
                        .HasColumnName("isSupply")
                        .HasComment("Договор поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "isSupply");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastChangeDate")
                        .HasComment("Дата и время обновления информации в сервисе. Это поле соответствует параметру dateFrom в запросе, если параметр flag=0 или не указан")
                        .HasAnnotation("Relational:JsonPropertyName", "lastChangeDate");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Юр. лицо которому принадлежит текущая запись, полученная через WB-Api");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint")
                        .HasColumnName("nmId")
                        .HasComment("Артикул WB")
                        .HasAnnotation("Relational:JsonPropertyName", "nmId");

                    b.Property<string>("OblastOkrugName")
                        .HasColumnType("text")
                        .HasColumnName("oblastOkrugName")
                        .HasComment("Округ")
                        .HasAnnotation("Relational:JsonPropertyName", "oblastOkrugName");

                    b.Property<string>("OrderType")
                        .HasColumnType("text")
                        .HasColumnName("orderType")
                        .HasComment("Тип заказа: Клиентский/Возврат Брака/Принудительный возврат/Возврат обезлички/Возврат Неверного Вложения/Возврат Продавца/Возврат из Отзыва/АвтоВозврат МП/Недокомплект (Вина продавца)/Возврат КГТ")
                        .HasAnnotation("Relational:JsonPropertyName", "orderType");

                    b.Property<decimal>("PriceWithDisc")
                        .HasColumnType("numeric")
                        .HasColumnName("priceWithDisc")
                        .HasComment("Цена со скидкой продавца (= totalPrice * (1 - discountPercent/100))")
                        .HasAnnotation("Relational:JsonPropertyName", "priceWithDisc");

                    b.Property<string>("RegionName")
                        .HasColumnType("text")
                        .HasColumnName("regionName")
                        .HasComment("Регион")
                        .HasAnnotation("Relational:JsonPropertyName", "regionName");

                    b.Property<decimal>("Spp")
                        .HasColumnType("numeric")
                        .HasColumnName("spp")
                        .HasComment("Скидка WB")
                        .HasAnnotation("Relational:JsonPropertyName", "spp");

                    b.Property<string>("Srid")
                        .HasColumnType("text")
                        .HasColumnName("srid")
                        .HasComment("Уникальный идентификатор заказа. Примечание для использующих API Маркетплейс: srid равен rid в ответах методов сборочных заданий.")
                        .HasAnnotation("Relational:JsonPropertyName", "srid");

                    b.Property<string>("Sticker")
                        .HasColumnType("text")
                        .HasColumnName("sticker")
                        .HasComment("Идентификатор стикера")
                        .HasAnnotation("Relational:JsonPropertyName", "sticker");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject")
                        .HasComment("Предмет")
                        .HasAnnotation("Relational:JsonPropertyName", "subject");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text")
                        .HasColumnName("supplierArticle")
                        .HasComment("Артикул продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "supplierArticle");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Дата и время синхронизации записи через WB-Api");

                    b.Property<string>("TechSize")
                        .HasColumnType("text")
                        .HasColumnName("techSize")
                        .HasComment("Размер товара")
                        .HasAnnotation("Relational:JsonPropertyName", "techSize");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("totalPrice")
                        .HasComment("Цена без скидок")
                        .HasAnnotation("Relational:JsonPropertyName", "totalPrice");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text")
                        .HasColumnName("warehouseName")
                        .HasComment("Склад отгрузки")
                        .HasAnnotation("Relational:JsonPropertyName", "warehouseName");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LegalEntity" }, "IX_StatisticsOrders_LegalEntity");

                    b.HasIndex(new[] { "CancelDate" }, "IX_StatisticsOrders_cancelDate");

                    b.HasIndex(new[] { "Date" }, "IX_StatisticsOrders_date");

                    b.HasIndex(new[] { "DiscountPercent" }, "IX_StatisticsOrders_discountPercent");

                    b.HasIndex(new[] { "FinishedPrice" }, "IX_StatisticsOrders_finishedPrice");

                    b.HasIndex(new[] { "IncomeId" }, "IX_StatisticsOrders_incomeID");

                    b.HasIndex(new[] { "IsCancel" }, "IX_StatisticsOrders_isCancel");

                    b.HasIndex(new[] { "IsRealization" }, "IX_StatisticsOrders_isRealization");

                    b.HasIndex(new[] { "IsSupply" }, "IX_StatisticsOrders_isSupply");

                    b.HasIndex(new[] { "LastChangeDate" }, "IX_StatisticsOrders_lastChangeDate");

                    b.HasIndex(new[] { "NmId" }, "IX_StatisticsOrders_nmId");

                    b.HasIndex(new[] { "PriceWithDisc" }, "IX_StatisticsOrders_priceWithDisc");

                    b.HasIndex(new[] { "Spp" }, "IX_StatisticsOrders_spp");

                    b.HasIndex(new[] { "TotalPrice" }, "IX_StatisticsOrders_totalPrice");

                    b.ToTable("StatisticsOrders", null, t =>
                        {
                            t.HasComment("Информация о заказах");
                        });
                });

            modelBuilder.Entity("MPS.Synchronizer.Domain.Entities.Statistics.StatisticsRealizationReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("Уникальный идентификатор записи");

                    b.Property<decimal>("Acceptance")
                        .HasColumnType("numeric")
                        .HasColumnName("acceptance")
                        .HasComment("Стоимость платной приёмки")
                        .HasAnnotation("Relational:JsonPropertyName", "acceptance");

                    b.Property<string>("AcquiringBank")
                        .HasColumnType("text")
                        .HasColumnName("acquiring_bank")
                        .HasComment("Наименование банка-эквайера")
                        .HasAnnotation("Relational:JsonPropertyName", "acquiring_bank");

                    b.Property<decimal>("AcquiringFee")
                        .HasColumnType("numeric")
                        .HasColumnName("acquiring_fee")
                        .HasComment("Возмещение издержек по эквайрингу. Издержки WB за услуги эквайринга: вычитаются из вознаграждения WB и не влияют на доход продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "acquiring_fee");

                    b.Property<decimal>("AcquiringPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("acquiring_percent")
                        .HasComment("Размер комиссии за эквайринг без НДС, %")
                        .HasAnnotation("Relational:JsonPropertyName", "acquiring_percent");

                    b.Property<decimal>("AdditionalPayment")
                        .HasColumnType("numeric")
                        .HasColumnName("additional_payment")
                        .HasComment("Доплаты")
                        .HasAnnotation("Relational:JsonPropertyName", "additional_payment");

                    b.Property<long>("AssemblyId")
                        .HasColumnType("bigint")
                        .HasColumnName("assembly_id")
                        .HasComment("Номер сборочного задания")
                        .HasAnnotation("Relational:JsonPropertyName", "assembly_id");

                    b.Property<string>("Barcode")
                        .HasColumnType("text")
                        .HasColumnName("barcode")
                        .HasComment("Баркод")
                        .HasAnnotation("Relational:JsonPropertyName", "barcode");

                    b.Property<string>("BonusTypeName")
                        .HasColumnType("text")
                        .HasColumnName("bonus_type_name")
                        .HasComment("Обоснование штрафов и доплат")
                        .HasAnnotation("Relational:JsonPropertyName", "bonus_type_name");

                    b.Property<string>("BrandName")
                        .HasColumnType("text")
                        .HasColumnName("brand_name")
                        .HasComment("Бренд")
                        .HasAnnotation("Relational:JsonPropertyName", "brand_name");

                    b.Property<decimal>("CommissionPercent")
                        .HasColumnType("numeric")
                        .HasColumnName("commission_percent")
                        .HasComment("Процент комиссии")
                        .HasAnnotation("Relational:JsonPropertyName", "commission_percent");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date")
                        .HasColumnName("create_dt")
                        .HasComment("Дата формирования отчёта")
                        .HasAnnotation("Relational:JsonPropertyName", "create_dt");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("text")
                        .HasColumnName("currency_name")
                        .HasComment("Валюта отчёта")
                        .HasAnnotation("Relational:JsonPropertyName", "currency_name");

                    b.Property<DateOnly>("DateFrom")
                        .HasColumnType("date")
                        .HasColumnName("date_from")
                        .HasComment("Дата начала отчётного периода")
                        .HasAnnotation("Relational:JsonPropertyName", "date_from");

                    b.Property<DateOnly>("DateTo")
                        .HasColumnType("date")
                        .HasColumnName("date_to")
                        .HasComment("Дата конца отчётного периода")
                        .HasAnnotation("Relational:JsonPropertyName", "date_to");

                    b.Property<string>("DeclarationNumber")
                        .HasColumnType("text")
                        .HasColumnName("declaration_number")
                        .HasComment("Номер таможенной декларации")
                        .HasAnnotation("Relational:JsonPropertyName", "declaration_number");

                    b.Property<decimal>("Deduction")
                        .HasColumnType("numeric")
                        .HasColumnName("deduction")
                        .HasComment("Прочие удержания/выплаты")
                        .HasAnnotation("Relational:JsonPropertyName", "deduction");

                    b.Property<long>("DeliveryAmount")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_amount")
                        .HasComment("Количество доставок")
                        .HasAnnotation("Relational:JsonPropertyName", "delivery_amount");

                    b.Property<decimal>("DeliveryRub")
                        .HasColumnType("numeric")
                        .HasColumnName("delivery_rub")
                        .HasComment("Стоимость логистики")
                        .HasAnnotation("Relational:JsonPropertyName", "delivery_rub");

                    b.Property<decimal>("DlvPrc")
                        .HasColumnType("numeric")
                        .HasColumnName("dlv_prc")
                        .HasComment("Фиксированный коэффициент склада по поставке")
                        .HasAnnotation("Relational:JsonPropertyName", "dlv_prc");

                    b.Property<string>("DocTypeName")
                        .HasColumnType("text")
                        .HasColumnName("doc_type_name")
                        .HasComment("Тип документа")
                        .HasAnnotation("Relational:JsonPropertyName", "doc_type_name");

                    b.Property<DateTime?>("FixTariffDateFrom")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fix_tariff_date_from")
                        .HasComment("Дата начала действия фиксации")
                        .HasAnnotation("Relational:JsonPropertyName", "fix_tariff_date_from");

                    b.Property<DateTime?>("FixTariffDateTo")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fix_tariff_date_to")
                        .HasComment("Дата окончания действия фиксации")
                        .HasAnnotation("Relational:JsonPropertyName", "fix_tariff_date_to");

                    b.Property<string>("GiBoxTypeName")
                        .HasColumnType("text")
                        .HasColumnName("gi_box_type_name")
                        .HasComment("Тип коробов")
                        .HasAnnotation("Relational:JsonPropertyName", "gi_box_type_name");

                    b.Property<long>("GiId")
                        .HasColumnType("bigint")
                        .HasColumnName("gi_id")
                        .HasComment("Номер поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "gi_id");

                    b.Property<decimal>("IsKgvpV2")
                        .HasColumnType("numeric")
                        .HasColumnName("is_kgvp_v2")
                        .HasComment("Размер снижения кВВ из-за акции")
                        .HasAnnotation("Relational:JsonPropertyName", "is_kgvp_v2");

                    b.Property<bool>("IsLegalEntity")
                        .HasColumnType("boolean")
                        .HasColumnName("is_legal_entity")
                        .HasComment("Признак B2B-продажи")
                        .HasAnnotation("Relational:JsonPropertyName", "is_legal_entity");

                    b.Property<string>("Kiz")
                        .HasColumnType("text")
                        .HasColumnName("kiz")
                        .HasComment("Код маркировки")
                        .HasAnnotation("Relational:JsonPropertyName", "kiz");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Юр. лицо которому принадлежит текущая запись, полученная через WB-Api");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint")
                        .HasColumnName("nm_id")
                        .HasComment("Артикул WB")
                        .HasAnnotation("Relational:JsonPropertyName", "nm_id");

                    b.Property<string>("OfficeName")
                        .HasColumnType("text")
                        .HasColumnName("office_name")
                        .HasComment("Склад")
                        .HasAnnotation("Relational:JsonPropertyName", "office_name");

                    b.Property<DateTimeOffset>("OrderDt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_dt")
                        .HasComment("Дата заказа. Присылается с явным указанием часового пояса")
                        .HasAnnotation("Relational:JsonPropertyName", "order_dt");

                    b.Property<string>("PaymentProcessing")
                        .HasColumnType("text")
                        .HasColumnName("payment_processing")
                        .HasComment("Тип платежа за Эквайринг/Комиссии за организацию платежей")
                        .HasAnnotation("Relational:JsonPropertyName", "payment_processing");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("numeric")
                        .HasColumnName("penalty")
                        .HasComment("Штрафы")
                        .HasAnnotation("Relational:JsonPropertyName", "penalty");

                    b.Property<decimal>("PpvzForPay")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_for_pay")
                        .HasComment("К перечислению продавцу за реализованный товар")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_for_pay");

                    b.Property<string>("PpvzInn")
                        .HasColumnType("text")
                        .HasColumnName("ppvz_inn")
                        .HasComment("ИНН партнера")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_inn");

                    b.Property<decimal>("PpvzKvwPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_kvw_prc")
                        .HasComment("Итоговый кВВ без НДС, %")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_kvw_prc");

                    b.Property<decimal>("PpvzKvwPercentageBase")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_kvw_prc_base")
                        .HasComment("Размер кВВ без НДС, % базовый")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_kvw_prc_base");

                    b.Property<long>("PpvzOfficeId")
                        .HasColumnType("bigint")
                        .HasColumnName("ppvz_office_id")
                        .HasComment("Номер офиса")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_office_id");

                    b.Property<string>("PpvzOfficeName")
                        .HasColumnType("text")
                        .HasColumnName("ppvz_office_name")
                        .HasComment("Наименование офиса доставки")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_office_name");

                    b.Property<decimal>("PpvzReward")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_reward")
                        .HasComment("Возмещение за выдачу и возврат товаров на ПВЗ")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_reward");

                    b.Property<decimal>("PpvzSalesCommission")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_sales_commission")
                        .HasComment("Вознаграждение с продаж до вычета услуг поверенного, без НДС")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_sales_commission");

                    b.Property<decimal>("PpvzSppPercentage")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_spp_prc")
                        .HasComment("Скидка постоянного покупателя")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_spp_prc");

                    b.Property<long>("PpvzSupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("ppvz_supplier_id")
                        .HasComment("Номер партнера")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_supplier_id");

                    b.Property<string>("PpvzSupplierName")
                        .HasColumnType("text")
                        .HasColumnName("ppvz_supplier_name")
                        .HasComment("Партнер")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_supplier_name");

                    b.Property<decimal>("PpvzVw")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_vw")
                        .HasComment("Вознаграждение WB без НДС")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_vw");

                    b.Property<decimal>("PpvzVwNds")
                        .HasColumnType("numeric")
                        .HasColumnName("ppvz_vw_nds")
                        .HasComment("НДС с вознаграждения WB")
                        .HasAnnotation("Relational:JsonPropertyName", "ppvz_vw_nds");

                    b.Property<decimal>("ProductDiscountForReport")
                        .HasColumnType("numeric")
                        .HasColumnName("product_discount_for_report")
                        .HasComment("Согласованный продуктовый дисконт")
                        .HasAnnotation("Relational:JsonPropertyName", "product_discount_for_report");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity")
                        .HasComment("Количество")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<long>("RealizationReportId")
                        .HasColumnType("bigint")
                        .HasColumnName("realizationreport_id")
                        .HasComment("Номер отчёта")
                        .HasAnnotation("Relational:JsonPropertyName", "realizationreport_id");

                    b.Property<decimal>("RebillLogisticCost")
                        .HasColumnType("numeric")
                        .HasColumnName("rebill_logistic_cost")
                        .HasComment("Возмещение издержек по перевозке")
                        .HasAnnotation("Relational:JsonPropertyName", "rebill_logistic_cost");

                    b.Property<string>("RebillLogisticOrg")
                        .HasColumnType("text")
                        .HasColumnName("rebill_logistic_org")
                        .HasComment("Организатор перевозки")
                        .HasAnnotation("Relational:JsonPropertyName", "rebill_logistic_org");

                    b.Property<int>("ReportType")
                        .HasColumnType("integer")
                        .HasColumnName("report_type")
                        .HasComment("Тип отчёта: 1 — стандартный, 2 — для уведомления о выкупе")
                        .HasAnnotation("Relational:JsonPropertyName", "report_type");

                    b.Property<decimal>("RetailAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("retail_amount")
                        .HasComment("Сумма продаж (возвратов)")
                        .HasAnnotation("Relational:JsonPropertyName", "retail_amount");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("retail_price")
                        .HasComment("Цена розничная")
                        .HasAnnotation("Relational:JsonPropertyName", "retail_price");

                    b.Property<decimal>("RetailPriceWithDiscountRub")
                        .HasColumnType("numeric")
                        .HasColumnName("retail_price_withdisc_rub")
                        .HasComment("Цена розничная с учетом согласованной скидки")
                        .HasAnnotation("Relational:JsonPropertyName", "retail_price_withdisc_rub");

                    b.Property<long>("ReturnAmount")
                        .HasColumnType("bigint")
                        .HasColumnName("return_amount")
                        .HasComment("Количество возвратов")
                        .HasAnnotation("Relational:JsonPropertyName", "return_amount");

                    b.Property<long>("Rid")
                        .HasColumnType("bigint")
                        .HasColumnName("rid")
                        .HasComment("Уникальный идентификатор заказа")
                        .HasAnnotation("Relational:JsonPropertyName", "rid");

                    b.Property<DateTimeOffset>("RrDt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("rr_dt")
                        .HasComment("Дата операции. Присылается с явным указанием часового пояса")
                        .HasAnnotation("Relational:JsonPropertyName", "rr_dt");

                    b.Property<long>("RrdId")
                        .HasColumnType("bigint")
                        .HasColumnName("rrd_id")
                        .HasComment("Номер строки")
                        .HasAnnotation("Relational:JsonPropertyName", "rrd_id");

                    b.Property<string>("SaName")
                        .HasColumnType("text")
                        .HasColumnName("sa_name")
                        .HasComment("Артикул продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "sa_name");

                    b.Property<DateTimeOffset>("SaleDt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sale_dt")
                        .HasComment("Дата продажи. Присылается с явным указанием часового пояса")
                        .HasAnnotation("Relational:JsonPropertyName", "sale_dt");

                    b.Property<long>("SalePercent")
                        .HasColumnType("bigint")
                        .HasColumnName("sale_percent")
                        .HasComment("Согласованная скидка")
                        .HasAnnotation("Relational:JsonPropertyName", "sale_percent");

                    b.Property<long>("ShkId")
                        .HasColumnType("bigint")
                        .HasColumnName("shk_id")
                        .HasComment("Штрих-код")
                        .HasAnnotation("Relational:JsonPropertyName", "shk_id");

                    b.Property<string>("SiteCountry")
                        .HasColumnType("text")
                        .HasColumnName("site_country")
                        .HasComment("Страна продажи")
                        .HasAnnotation("Relational:JsonPropertyName", "site_country");

                    b.Property<string>("Srid")
                        .HasColumnType("text")
                        .HasColumnName("srid")
                        .HasComment("Уникальный идентификатор заказа.Примечание для использующих API Marketplace: srid равен rid в ответах методов сборочных заданий")
                        .HasAnnotation("Relational:JsonPropertyName", "srid");

                    b.Property<bool>("SrvDbs")
                        .HasColumnType("boolean")
                        .HasColumnName("srv_dbs")
                        .HasComment("Признак услуги платной доставки")
                        .HasAnnotation("Relational:JsonPropertyName", "srv_dbs");

                    b.Property<string>("StickerId")
                        .HasColumnType("text")
                        .HasColumnName("sticker_id")
                        .HasComment("Цифровое значение стикера, который клеится на товар в процессе сборки заказа по схеме 'Маркетплейс'")
                        .HasAnnotation("Relational:JsonPropertyName", "sticker_id");

                    b.Property<decimal>("StorageFee")
                        .HasColumnType("numeric")
                        .HasColumnName("storage_fee")
                        .HasComment("Стоимость хранения")
                        .HasAnnotation("Relational:JsonPropertyName", "storage_fee");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text")
                        .HasColumnName("subject_name")
                        .HasComment("Предмет")
                        .HasAnnotation("Relational:JsonPropertyName", "subject_name");

                    b.Property<decimal>("SupRatingPercentageUp")
                        .HasColumnType("numeric")
                        .HasColumnName("sup_rating_prc_up")
                        .HasComment("Размер снижения кВВ из-за рейтинга")
                        .HasAnnotation("Relational:JsonPropertyName", "sup_rating_prc_up");

                    b.Property<string>("SupplierContractCode")
                        .HasColumnType("text")
                        .HasColumnName("suppliercontract_code")
                        .HasComment("Договор")
                        .HasAnnotation("Relational:JsonPropertyName", "suppliercontract_code");

                    b.Property<string>("SupplierOperName")
                        .HasColumnType("text")
                        .HasColumnName("supplier_oper_name")
                        .HasComment("Обоснование для оплаты")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier_oper_name");

                    b.Property<decimal>("SupplierPromo")
                        .HasColumnType("numeric")
                        .HasColumnName("supplier_promo")
                        .HasComment("Промокод")
                        .HasAnnotation("Relational:JsonPropertyName", "supplier_promo");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Дата и время синхронизации записи через WB-Api");

                    b.Property<string>("TrbxId")
                        .HasColumnType("text")
                        .HasColumnName("trbx_id")
                        .HasComment("Номер короба для платной приёмки")
                        .HasAnnotation("Relational:JsonPropertyName", "trbx_id");

                    b.Property<string>("TsName")
                        .HasColumnType("text")
                        .HasColumnName("ts_name")
                        .HasComment("Размер")
                        .HasAnnotation("Relational:JsonPropertyName", "ts_name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LegalEntity" }, "IX_StatisticsRealizationReports_LegalEntity");

                    b.HasIndex(new[] { "Acceptance" }, "IX_StatisticsRealizationReports_acceptance");

                    b.HasIndex(new[] { "AcquiringFee" }, "IX_StatisticsRealizationReports_acquiring_fee");

                    b.HasIndex(new[] { "AcquiringPercentage" }, "IX_StatisticsRealizationReports_acquiring_percent");

                    b.HasIndex(new[] { "AdditionalPayment" }, "IX_StatisticsRealizationReports_additional_payment");

                    b.HasIndex(new[] { "AssemblyId" }, "IX_StatisticsRealizationReports_assembly_id");

                    b.HasIndex(new[] { "CommissionPercent" }, "IX_StatisticsRealizationReports_commission_percent");

                    b.HasIndex(new[] { "CreateDate" }, "IX_StatisticsRealizationReports_create_dt");

                    b.HasIndex(new[] { "DateFrom" }, "IX_StatisticsRealizationReports_date_from");

                    b.HasIndex(new[] { "DateTo" }, "IX_StatisticsRealizationReports_date_to");

                    b.HasIndex(new[] { "Deduction" }, "IX_StatisticsRealizationReports_deduction");

                    b.HasIndex(new[] { "DeliveryAmount" }, "IX_StatisticsRealizationReports_delivery_amount");

                    b.HasIndex(new[] { "DeliveryRub" }, "IX_StatisticsRealizationReports_delivery_rub");

                    b.HasIndex(new[] { "DlvPrc" }, "IX_StatisticsRealizationReports_dlv_prc");

                    b.HasIndex(new[] { "FixTariffDateFrom" }, "IX_StatisticsRealizationReports_fix_tariff_date_from");

                    b.HasIndex(new[] { "FixTariffDateTo" }, "IX_StatisticsRealizationReports_fix_tariff_date_to");

                    b.HasIndex(new[] { "GiId" }, "IX_StatisticsRealizationReports_gi_id");

                    b.HasIndex(new[] { "IsKgvpV2" }, "IX_StatisticsRealizationReports_is_kgvp_v2");

                    b.HasIndex(new[] { "IsLegalEntity" }, "IX_StatisticsRealizationReports_is_legal_entity");

                    b.HasIndex(new[] { "NmId" }, "IX_StatisticsRealizationReports_nm_id");

                    b.HasIndex(new[] { "OrderDt" }, "IX_StatisticsRealizationReports_order_dt");

                    b.HasIndex(new[] { "Penalty" }, "IX_StatisticsRealizationReports_penalty");

                    b.HasIndex(new[] { "PpvzForPay" }, "IX_StatisticsRealizationReports_ppvz_for_pay");

                    b.HasIndex(new[] { "PpvzKvwPercentage" }, "IX_StatisticsRealizationReports_ppvz_kvw_prc");

                    b.HasIndex(new[] { "PpvzKvwPercentageBase" }, "IX_StatisticsRealizationReports_ppvz_kvw_prc_base");

                    b.HasIndex(new[] { "PpvzOfficeId" }, "IX_StatisticsRealizationReports_ppvz_office_id");

                    b.HasIndex(new[] { "PpvzReward" }, "IX_StatisticsRealizationReports_ppvz_reward");

                    b.HasIndex(new[] { "PpvzSalesCommission" }, "IX_StatisticsRealizationReports_ppvz_sales_commission");

                    b.HasIndex(new[] { "PpvzSppPercentage" }, "IX_StatisticsRealizationReports_ppvz_spp_prc");

                    b.HasIndex(new[] { "PpvzSupplierId" }, "IX_StatisticsRealizationReports_ppvz_supplier_id");

                    b.HasIndex(new[] { "PpvzVw" }, "IX_StatisticsRealizationReports_ppvz_vw");

                    b.HasIndex(new[] { "PpvzVwNds" }, "IX_StatisticsRealizationReports_ppvz_vw_nds");

                    b.HasIndex(new[] { "ProductDiscountForReport" }, "IX_StatisticsRealizationReports_product_discount_for_report");

                    b.HasIndex(new[] { "Quantity" }, "IX_StatisticsRealizationReports_quantity");

                    b.HasIndex(new[] { "RealizationReportId" }, "IX_StatisticsRealizationReports_realizationreport_id");

                    b.HasIndex(new[] { "RebillLogisticCost" }, "IX_StatisticsRealizationReports_rebill_logistic_cost");

                    b.HasIndex(new[] { "ReportType" }, "IX_StatisticsRealizationReports_report_type");

                    b.HasIndex(new[] { "RetailAmount" }, "IX_StatisticsRealizationReports_retail_amount");

                    b.HasIndex(new[] { "RetailPrice" }, "IX_StatisticsRealizationReports_retail_price");

                    b.HasIndex(new[] { "RetailPriceWithDiscountRub" }, "IX_StatisticsRealizationReports_retail_price_withdisc_rub");

                    b.HasIndex(new[] { "ReturnAmount" }, "IX_StatisticsRealizationReports_return_amount");

                    b.HasIndex(new[] { "Rid" }, "IX_StatisticsRealizationReports_rid");

                    b.HasIndex(new[] { "RrDt" }, "IX_StatisticsRealizationReports_rr_dt");

                    b.HasIndex(new[] { "SaleDt" }, "IX_StatisticsRealizationReports_sale_dt");

                    b.HasIndex(new[] { "SalePercent" }, "IX_StatisticsRealizationReports_sale_percent");

                    b.HasIndex(new[] { "ShkId" }, "IX_StatisticsRealizationReports_shk_id");

                    b.HasIndex(new[] { "SrvDbs" }, "IX_StatisticsRealizationReports_srv_dbs");

                    b.HasIndex(new[] { "StorageFee" }, "IX_StatisticsRealizationReports_storage_fee");

                    b.HasIndex(new[] { "SupRatingPercentageUp" }, "IX_StatisticsRealizationReports_sup_rating_prc_up");

                    b.HasIndex(new[] { "SupplierPromo" }, "IX_StatisticsRealizationReports_supplier_promo");

                    b.ToTable("StatisticsRealizationReports", null, t =>
                        {
                            t.HasComment("Детализация к еженедельному отчёту реализации");
                        });
                });

            modelBuilder.Entity("MPS.Synchronizer.Domain.Entities.Statistics.StatisticsSale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("Уникальный идентификатор записи");

                    b.Property<string>("Barcode")
                        .HasColumnType("text")
                        .HasColumnName("barcode")
                        .HasComment("Баркод")
                        .HasAnnotation("Relational:JsonPropertyName", "barcode");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand")
                        .HasComment("Бренд")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category")
                        .HasComment("Категория")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<string>("CountryName")
                        .HasColumnType("text")
                        .HasColumnName("countryName")
                        .HasComment("Страна")
                        .HasAnnotation("Relational:JsonPropertyName", "countryName");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date")
                        .HasComment("Дата и время продажи. Это поле соответствует параметру dateFrom в запросе, если параметр flag=1")
                        .HasAnnotation("Relational:JsonPropertyName", "date");

                    b.Property<long>("DiscountPercent")
                        .HasColumnType("bigint")
                        .HasColumnName("discountPercent")
                        .HasComment("Скидка продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "discountPercent");

                    b.Property<decimal>("FinishedPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("finishedPrice")
                        .HasComment("Фактическая цена с учетом всех скидок (к взиманию с покупателя)")
                        .HasAnnotation("Relational:JsonPropertyName", "finishedPrice");

                    b.Property<decimal>("ForPay")
                        .HasColumnType("numeric")
                        .HasColumnName("forPay")
                        .HasComment("К перечислению продавцу")
                        .HasAnnotation("Relational:JsonPropertyName", "forPay");

                    b.Property<string>("GNumber")
                        .HasColumnType("text")
                        .HasColumnName("gNumber")
                        .HasComment("Номер заказа")
                        .HasAnnotation("Relational:JsonPropertyName", "gNumber");

                    b.Property<long>("IncomeId")
                        .HasColumnType("bigint")
                        .HasColumnName("incomeID")
                        .HasComment("Номер поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "incomeID");

                    b.Property<bool>("IsRealization")
                        .HasColumnType("boolean")
                        .HasColumnName("isRealization")
                        .HasComment("Договор реализации")
                        .HasAnnotation("Relational:JsonPropertyName", "isRealization");

                    b.Property<bool>("IsSupply")
                        .HasColumnType("boolean")
                        .HasColumnName("isSupply")
                        .HasComment("Договор поставки")
                        .HasAnnotation("Relational:JsonPropertyName", "isSupply");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastChangeDate")
                        .HasComment("Дата и время обновления информации в сервисе. Это поле соответствует параметру dateFrom в запросе, если параметр flag=0 или не указан")
                        .HasAnnotation("Relational:JsonPropertyName", "lastChangeDate");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Юр. лицо которому принадлежит текущая запись, полученная через WB-Api");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint")
                        .HasColumnName("nmId")
                        .HasComment("Артикул WB")
                        .HasAnnotation("Relational:JsonPropertyName", "nmId");

                    b.Property<string>("OblastOkrugName")
                        .HasColumnType("text")
                        .HasColumnName("oblastOkrugName")
                        .HasComment("Округ")
                        .HasAnnotation("Relational:JsonPropertyName", "oblastOkrugName");

                    b.Property<string>("OrderType")
                        .HasColumnType("text")
                        .HasColumnName("orderType")
                        .HasComment("Тип заказа: Клиентский/Возврат Брака/Принудительный возврат/Возврат обезлички/Возврат Неверного Вложения/Возврат Продавца/Возврат из Отзыва/АвтоВозврат МП/Недокомплект (Вина продавца)/Возврат КГТ")
                        .HasAnnotation("Relational:JsonPropertyName", "orderType");

                    b.Property<long>("PaymentSaleAmount")
                        .HasColumnType("bigint")
                        .HasColumnName("paymentSaleAmount")
                        .HasComment("Оплачено с WB Кошелька")
                        .HasAnnotation("Relational:JsonPropertyName", "paymentSaleAmount");

                    b.Property<decimal>("PriceWithDisc")
                        .HasColumnType("numeric")
                        .HasColumnName("priceWithDisc")
                        .HasComment("Цена со скидкой продавца, от которой считается сумма к перечислению продавцу forPay (= totalPrice * (1 - discountPercent/100))")
                        .HasAnnotation("Relational:JsonPropertyName", "priceWithDisc");

                    b.Property<string>("RegionName")
                        .HasColumnType("text")
                        .HasColumnName("regionName")
                        .HasComment("Регион")
                        .HasAnnotation("Relational:JsonPropertyName", "regionName");

                    b.Property<string>("SaleId")
                        .HasColumnType("text")
                        .HasColumnName("saleID")
                        .HasComment("Уникальный идентификатор продажи/возврата")
                        .HasAnnotation("Relational:JsonPropertyName", "saleID");

                    b.Property<decimal>("Spp")
                        .HasColumnType("numeric")
                        .HasColumnName("spp")
                        .HasComment("Скидка WB")
                        .HasAnnotation("Relational:JsonPropertyName", "spp");

                    b.Property<string>("Srid")
                        .HasColumnType("text")
                        .HasColumnName("srid")
                        .HasComment("Уникальный идентификатор заказа. Примечание для использующих API Маркетплейс: srid равен rid в ответах методов сборочных заданий")
                        .HasAnnotation("Relational:JsonPropertyName", "srid");

                    b.Property<string>("Sticker")
                        .HasColumnType("text")
                        .HasColumnName("sticker")
                        .HasComment("Идентификатор стикера")
                        .HasAnnotation("Relational:JsonPropertyName", "sticker");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject")
                        .HasComment("Предмет")
                        .HasAnnotation("Relational:JsonPropertyName", "subject");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text")
                        .HasColumnName("supplierArticle")
                        .HasComment("Артикул продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "supplierArticle");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Дата и время синхронизации записи через WB-Api");

                    b.Property<string>("TechSize")
                        .HasColumnType("text")
                        .HasColumnName("techSize")
                        .HasComment("Размер товара")
                        .HasAnnotation("Relational:JsonPropertyName", "techSize");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric")
                        .HasColumnName("totalPrice")
                        .HasComment("Цена без скидок")
                        .HasAnnotation("Relational:JsonPropertyName", "totalPrice");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text")
                        .HasColumnName("warehouseName")
                        .HasComment("Склад отгрузки")
                        .HasAnnotation("Relational:JsonPropertyName", "warehouseName");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "LegalEntity" }, "IX_StatisticsSales_LegalEntity");

                    b.HasIndex(new[] { "Date" }, "IX_StatisticsSales_date");

                    b.HasIndex(new[] { "DiscountPercent" }, "IX_StatisticsSales_discountPercent");

                    b.HasIndex(new[] { "FinishedPrice" }, "IX_StatisticsSales_finishedPrice");

                    b.HasIndex(new[] { "ForPay" }, "IX_StatisticsSales_forPay");

                    b.HasIndex(new[] { "IncomeId" }, "IX_StatisticsSales_incomeID");

                    b.HasIndex(new[] { "IsRealization" }, "IX_StatisticsSales_isRealization");

                    b.HasIndex(new[] { "IsSupply" }, "IX_StatisticsSales_isSupply");

                    b.HasIndex(new[] { "LastChangeDate" }, "IX_StatisticsSales_lastChangeDate");

                    b.HasIndex(new[] { "NmId" }, "IX_StatisticsSales_nmId");

                    b.HasIndex(new[] { "PaymentSaleAmount" }, "IX_StatisticsSales_paymentSaleAmount");

                    b.HasIndex(new[] { "PriceWithDisc" }, "IX_StatisticsSales_priceWithDisc");

                    b.HasIndex(new[] { "Spp" }, "IX_StatisticsSales_spp");

                    b.HasIndex(new[] { "TotalPrice" }, "IX_StatisticsSales_totalPrice");

                    b.ToTable("StatisticsSales", null, t =>
                        {
                            t.HasComment("Информация о продаже или возврате товара");
                        });
                });

            modelBuilder.Entity("MPS.Synchronizer.Domain.Entities.Statistics.StatisticsStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasComment("Уникальный идентификатор записи");

                    b.Property<string>("Barcode")
                        .HasColumnType("text")
                        .HasColumnName("barcode")
                        .HasComment("Баркод")
                        .HasAnnotation("Relational:JsonPropertyName", "barcode");

                    b.Property<string>("Brand")
                        .HasColumnType("text")
                        .HasColumnName("brand")
                        .HasComment("Бренд")
                        .HasAnnotation("Relational:JsonPropertyName", "brand");

                    b.Property<string>("Category")
                        .HasColumnType("text")
                        .HasColumnName("category")
                        .HasComment("Категория")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric")
                        .HasColumnName("Discount")
                        .HasComment("Скидка")
                        .HasAnnotation("Relational:JsonPropertyName", "Discount");

                    b.Property<long>("InWayFromClient")
                        .HasColumnType("bigint")
                        .HasColumnName("inWayFromClient")
                        .HasComment("В пути от клиента")
                        .HasAnnotation("Relational:JsonPropertyName", "inWayFromClient");

                    b.Property<long>("InWayToClient")
                        .HasColumnType("bigint")
                        .HasColumnName("inWayToClient")
                        .HasComment("В пути к клиенту")
                        .HasAnnotation("Relational:JsonPropertyName", "inWayToClient");

                    b.Property<bool>("IsRealization")
                        .HasColumnType("boolean")
                        .HasColumnName("isRealization")
                        .HasComment("Договор реализации (внутренние технологические данные)")
                        .HasAnnotation("Relational:JsonPropertyName", "isRealization");

                    b.Property<bool>("IsSupply")
                        .HasColumnType("boolean")
                        .HasColumnName("isSupply")
                        .HasComment("Договор поставки (внутренние технологические данные)")
                        .HasAnnotation("Relational:JsonPropertyName", "isSupply");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lastChangeDate")
                        .HasComment("Дата и время обновления информации в сервисе. Это поле соответствует параметру dateFrom в запросе")
                        .HasAnnotation("Relational:JsonPropertyName", "lastChangeDate");

                    b.Property<string>("LegalEntity")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Юр. лицо которому принадлежит текущая запись, полученная через WB-Api");

                    b.Property<long>("NmId")
                        .HasColumnType("bigint")
                        .HasColumnName("nmId")
                        .HasComment("Артикул WB")
                        .HasAnnotation("Relational:JsonPropertyName", "nmId");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("Price")
                        .HasComment("Цена")
                        .HasAnnotation("Relational:JsonPropertyName", "Price");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("quantity")
                        .HasComment("Количество, доступное для продажи (сколько можно добавить в корзину)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantity");

                    b.Property<long>("QuantityFull")
                        .HasColumnType("bigint")
                        .HasColumnName("quantityFull")
                        .HasComment("Полное (непроданное) количество, которое числится за складом (= quantity + в пути)")
                        .HasAnnotation("Relational:JsonPropertyName", "quantityFull");

                    b.Property<string>("SCCode")
                        .HasColumnType("text")
                        .HasColumnName("SCCode")
                        .HasComment("Код контракта (внутренние технологические данные)")
                        .HasAnnotation("Relational:JsonPropertyName", "SCCode");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject")
                        .HasComment("Предмет")
                        .HasAnnotation("Relational:JsonPropertyName", "subject");

                    b.Property<string>("SupplierArticle")
                        .HasColumnType("text")
                        .HasColumnName("supplierArticle")
                        .HasComment("Артикул продавца")
                        .HasAnnotation("Relational:JsonPropertyName", "supplierArticle");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("Дата и время синхронизации записи через WB-Api");

                    b.Property<string>("TechSize")
                        .HasColumnType("text")
                        .HasColumnName("techSize")
                        .HasComment("Размер")
                        .HasAnnotation("Relational:JsonPropertyName", "techSize");

                    b.Property<string>("WarehouseName")
                        .HasColumnType("text")
                        .HasColumnName("warehouseName")
                        .HasComment("Название склада")
                        .HasAnnotation("Relational:JsonPropertyName", "warehouseName");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Discount" }, "IX_StatisticsStocks_Discount");

                    b.HasIndex(new[] { "LegalEntity" }, "IX_StatisticsStocks_LegalEntity");

                    b.HasIndex(new[] { "Price" }, "IX_StatisticsStocks_Price");

                    b.HasIndex(new[] { "InWayFromClient" }, "IX_StatisticsStocks_inWayFromClient");

                    b.HasIndex(new[] { "InWayToClient" }, "IX_StatisticsStocks_inWayToClient");

                    b.HasIndex(new[] { "IsRealization" }, "IX_StatisticsStocks_isRealization");

                    b.HasIndex(new[] { "IsSupply" }, "IX_StatisticsStocks_isSupply");

                    b.HasIndex(new[] { "LastChangeDate" }, "IX_StatisticsStocks_lastChangeDate");

                    b.HasIndex(new[] { "NmId" }, "IX_StatisticsStocks_nmId");

                    b.HasIndex(new[] { "Quantity" }, "IX_StatisticsStocks_quantity");

                    b.HasIndex(new[] { "QuantityFull" }, "IX_StatisticsStocks_quantityFull");

                    b.ToTable("StatisticsStocks", null, t =>
                        {
                            t.HasComment("Информация о остатках товаров на складах WB");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
